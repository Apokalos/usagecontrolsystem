To view the content as a UML diagram, use PlantUML in eclipse see: http://plantuml.com/eclipse
@startuml
actor Device #red
participant PEPRestCommunication
participant PEPRest
participant PEPUCSCommunication
participant ContextHandler
participant PIPReader
actor Attribute #green

Device->PEPRestCommunication : startEvaluation()
PEPRestCommunication->PEPRest : tryAccess()  
PEPRest->PEPRest : prepare tryAccess msg
PEPRest->ContextHandler : send tryAccess msg
PEPRest->PEPRest : add msg to messageStore
PEPRest-->PEPRestCommunication : messageId
PEPRestCommunication-->Device : messageId

== Asynchronous flow - Begins ==

ContextHandler->ContextHandler : enrich policy\n via PAP and PIP
ContextHandler->ContextHandler : evaluate policy via PDP
ContextHandler->PEPUCSCommunication : tryAccessResponse msg
PEPUCSCommunication->PEPRest : receiveResponse()
PEPRest->PEPRest : handleResponse() 
note left:update tryAccess\n status in msg store

alt PERMIT

    PEPRest->PEPRest : prepare startAccess msg
    PEPRest->ContextHandler : startAccess()
    PEPRest->PEPRest : add msg to messageStore

alt PERMIT
    ContextHandler->ContextHandler : start a session via \nSessionManager
    ContextHandler->PIPReader : start monitoring
    PIPReader->Attribute: monitor attribute
end
    ContextHandler->PEPUCSCommunication : startAccessResponse msg
    PEPUCSCommunication->PEPRest : receiveResponse
    PEPRest->PEPRest : handleResponse()
    note right:update startAccess\n status in msg store \n also with sessionId    
end

Attribute->PIPReader : value changed
PIPReader->PIPReader: prepare reevaluate\n message
PIPReader->ContextHandler : reevaluate
ContextHandler->ContextHandler : prepare \n ReevaluationResponse\n msg
ContextHandler->PEPUCSCommunication : onGoingEvaluation()
PEPUCSCommunication->PEPRest : onGoingEvaluation()
alt HARD configuration STOP
    PEPRest->PEPRest : prepare endAccess msg
    PEPRest->ContextHandler : endAccess()
    PEPRest->PEPRest : add msg to messageStore

    ContextHandler->ContextHandler : revoke the session
    ContextHandler->PEPUCSCommunication : endAccessResponse msg
    PEPUCSCommunication->PEPRest : receiveResponse
    PEPRest->PEPRest : handleResponse()
    note right:update endAccess\n status in msg store \n also with sessionId  
else SOFT configuration PAUSE (example)
    alt PERMIT
        PEPRest->Device : pause
        else DENY
        PEPRest->Device : terminate
    end
    note right:NOTE: For this to work the device\n needs to be registered at the\n start evaluation stage above   
end

== Asynchronous flow - Ends ==

Device->PEPRestCommunication : mesageStatus(messageId)
PEPRestCommunication->PEPRest : getStatusFromHistory
PEPRest->PEPRest : find sessionId \n of the messageId
note right : get last msg status \n from mmsg store \n using sessionId
PEPRest-->PEPRestCommunication : status
PEPRestCommunication--> Device : status 

@enduml

